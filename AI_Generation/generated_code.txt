import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
data = {"Koala Sightings": [10, 15, 25, 30, 40], "Eucalyptus Density (trees/hectare)": [20, 35, 50, 65, 80]}
koala_df = pd.DataFrame(data)
model = LinearRegression()
X = koala_df["Eucalyptus Density (trees/hectare)"].values.reshape(-1, 1)
y = koala_df["Koala Sightings"]
model.fit(X, y)
slope = model.coef_[0]
y_intercept = model.intercept_
print(f"Equation of the best-fit line: y = {slope:.2f}x + {y_intercept:.2f}")
print(f"Slope: {slope:.2f} - For every increase of 1 tree/hectare in eucalyptus density, the number of koala sightings increases by {slope:.2f}.")
print(f"Y-intercept: {y_intercept:.2f} - When the eucalyptus density is 0, the model predicts {y_intercept:.2f} koala sightings. This likely indicates the presence of other factors contributing to sightings even in areas with no eucalyptus.")
predictions = model.predict(X)
print("Predictions vs Actual Values:")
for i in range(len(predictions)):
    print(f"Eucalyptus Density: {X[i][0]} - Prediction: {predictions[i]:.2f} - Actual: {y[i]}")
rmse = mean_squared_error(y, predictions, squared=False)
print(f"Root Mean Squared Error: {rmse:.2f}")